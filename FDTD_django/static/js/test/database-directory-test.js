// Generated by CoffeeScript 1.9.1
(function() {
  describe('Unit Test RefractiveIndexController', function() {
    var root;
    root = typeof exports !== "undefined" && exports !== null ? exports : this;
    beforeEach(module('refractiveIndexApp'));
    beforeEach(inject(function(_$controller_) {
      return this.$controller = _$controller_;
    }));
    return it('candisplay initial false', function() {
      var $scope, controller;
      $scope = {};
      controller = this.$controller('RefractiveIndexController', {
        $scope: $scope
      });
      return $scope.candisplay = false;
    });
  });

  describe('refractiveIndexApp', function() {
    var root;
    root = typeof exports !== "undefined" && exports !== null ? exports : this;
    beforeEach(module('refractiveIndexApp'));
    beforeEach(inject(function(_$compile_, _$rootScope_, _$httpBackend_, _$controller_) {
      this.$controller = _$controller_;
      this.$compile = _$compile_;
      this.$rootScope = _$rootScope_;
      this.$httpBackend = _$httpBackend_;
      return this.elementlistGetHandler = this.$httpBackend.when('GET', '/elementlist/undefined').respond([
        {
          "title": "Ag"
        }, {
          "title": "Au"
        }
      ]);
    }));
    afterEach(function() {
      this.$httpBackend.verifyNoOutstandingExpectation();
      return this.$httpBackend.verifyNoOutstandingRequest();
    });
    it('peter-dropdown listen to the text-changed event', function() {
      var element;
      element = this.$compile("<peter-selector unitest='1' selected-changed></peter-selector>")(this.$rootScope);
      this.$httpBackend.expectGET('/elementlist/undefined');
      element.triggerHandler('selectedtext-changed');
      assert(this.$rootScope.nextdisabled === false);
      this.$httpBackend.flush();
      return assert(this.$rootScope.chemelement[0]['title'] === 'Ag');
    });
    return it('click next button show the next step', function() {
      var $scope, controler;
      $scope = {};
      controler = this.$controller('RefractiveIndexController', {
        $scope: $scope
      });
      $scope.nextclickHandler();
      return assert($scope.candisplay === true);
    });
  });

}).call(this);

//# sourceMappingURL=database-directory-test.js.map
