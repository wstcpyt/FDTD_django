// Generated by CoffeeScript 1.9.1
(function() {
  var ButtonChangedEvent, app;

  app = angular.module('refractiveIndexApp', []);

  app.controller('RefractiveIndexController', function($scope) {
    $scope.candisplay = false;
    $scope.nextdisabled = true;
    $scope.chemelement = [
      {
        title: 'NO DATA'
      }
    ];
    return $scope.nextclickHandler = function() {
      return $scope.candisplay = true;
    };
  });

  app.directive('selectedChanged', function($http) {
    return {
      restrict: 'A',
      link: function($scope, element, attrs) {
        return element.on('selected-changed', function() {
          var buttonChangedEvent;
          console.log(this.selected);
          if (this.selected !== void 0 || attrs.unitest === '1') {
            buttonChangedEvent = new ButtonChangedEvent(this, $http, $scope);
            buttonChangedEvent.updateChemelement();
            return buttonChangedEvent.makenextbuttonavailable();
          }
        });
      }
    };
  });

  ButtonChangedEvent = (function() {
    function ButtonChangedEvent(_this, _$http, _$scope) {
      this._this = _this;
      this._$http = _$http;
      this._$scope = _$scope;
    }

    ButtonChangedEvent.prototype.makenextbuttonavailable = function() {
      return this._$scope.nextdisabled = false;
    };

    ButtonChangedEvent.prototype.updateChemelement = function() {
      var _this_;
      _this_ = this;
      return this._$http.get('/elementlist/' + this._this.selectedtext).success(function(data) {
        return _this_._updateHandler(data);
      }).error(function() {
        return console.log('cannot retrieve element list');
      });
    };

    ButtonChangedEvent.prototype._updateHandler = function(data) {
      if (data.length !== 0) {
        return this._$scope.chemelement = data;
      }
    };

    return ButtonChangedEvent;

  })();

}).call(this);

//# sourceMappingURL=database-directory.js.map
