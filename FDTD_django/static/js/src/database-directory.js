// Generated by CoffeeScript 1.9.2
(function() {
  var CategoryChangedEvent, ElementChangedEvent, ElementListChangedEvent, app;

  app = angular.module('refractiveIndexApp', []);

  app.controller('RefractiveIndexController', function($scope) {
    $scope.categorynextdisabled = true;
    $scope.elementnextdisabled = true;
    $scope.elementlistnextdisabled = true;
    $scope.categorynextclickHandler = function() {
      $scope.categorydisplay = false;
      return $scope.elementdisplay = true;
    };
    $scope.elementnextclickHandler = function() {
      $scope.elementdisplay = false;
      return $scope.elementlistdisplay = true;
    };
    return $scope.elementlistnextclickHandler = function() {
      $scope.elementlistdisplay = false;
      return $scope.resultdisplay = true;
    };
  });

  app.directive('categoryChangedHandler', function($http) {
    return {
      restrict: 'A',
      link: function($scope, element, attrs) {
        return element.on('selectedtext-changed', function() {
          var categoryChangedEvent;
          if (this.selected !== void 0 || attrs.unitest === '1') {
            categoryChangedEvent = new CategoryChangedEvent(this, $http, $scope);
            categoryChangedEvent.updateChemelement();
            return $scope.$apply(categoryChangedEvent.makenextbuttonavailable());
          }
        });
      }
    };
  });

  CategoryChangedEvent = (function() {
    function CategoryChangedEvent(_this, _$http, _$scope) {
      this._this = _this;
      this._$http = _$http;
      this._$scope = _$scope;
    }

    CategoryChangedEvent.prototype.makenextbuttonavailable = function() {
      return this._$scope.categorynextdisabled = false;
    };

    CategoryChangedEvent.prototype.updateChemelement = function() {
      var _this_;
      _this_ = this;
      return this._$http.get('/elementitems/' + this._this.selectedtext + '/').success(function(data) {
        return _this_._updateHandler(data);
      }).error(function() {
        return console.log('cannot retrieve element list');
      });
    };

    CategoryChangedEvent.prototype._updateHandler = function(data) {
      return this._$scope.chemelement = data;
    };

    return CategoryChangedEvent;

  })();

  app.directive('elementChangedHandler', function($http) {
    return {
      restrict: 'A',
      link: function($scope, element, attrs) {
        return element.on('selectedtext-changed', function() {
          var elementChangedEvent;
          if (this.selected !== void 0 || attrs.unitest === '1') {
            elementChangedEvent = new ElementChangedEvent(this, $http, $scope);
            $scope.$apply(elementChangedEvent.makenextbuttonavailable());
            return elementChangedEvent.updateChemelementlist();
          }
        });
      }
    };
  });

  ElementChangedEvent = (function() {
    function ElementChangedEvent(_this, _$http, _$scope) {
      this._this = _this;
      this._$http = _$http;
      this._$scope = _$scope;
    }

    ElementChangedEvent.prototype.makenextbuttonavailable = function() {
      return this._$scope.elementnextdisabled = false;
    };

    ElementChangedEvent.prototype.updateChemelementlist = function() {
      var _this_;
      _this_ = this;
      return this._$http.get('/elementlistitems/' + this._this.selectedtext + '/').success(function(data) {
        return _this_._updateHandler(data);
      }).error(function() {
        return console.log('cannot retrieve element list');
      });
    };

    ElementChangedEvent.prototype._updateHandler = function(data) {
      return this._$scope.chemelementlist = data;
    };

    return ElementChangedEvent;

  })();

  app.directive('elementlistChangedHandler', function($http) {
    return {
      restrict: 'A',
      link: function($scope, element, attrs) {
        return element.on('selectedtext-changed', function() {
          var elementlistChangedEvent;
          if (this.selected !== void 0 || attrs.unitest === '1') {
            elementlistChangedEvent = new ElementListChangedEvent(this, $http, $scope);
            return $scope.$apply(elementlistChangedEvent.makenextbuttonavailable());
          }
        });
      }
    };
  });

  ElementListChangedEvent = (function() {
    function ElementListChangedEvent(_this, _$http, _$scope) {
      this._this = _this;
      this._$http = _$http;
      this._$scope = _$scope;
    }

    ElementListChangedEvent.prototype.makenextbuttonavailable = function() {
      return this._$scope.elementlistnextdisabled = false;
    };

    return ElementListChangedEvent;

  })();

}).call(this);

//# sourceMappingURL=database-directory.js.map
