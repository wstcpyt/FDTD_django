// Generated by CoffeeScript 1.9.1
(function() {
  var app, queryElementList;

  app = angular.module('FDTDapp', ['ngMaterial']);

  app.controller('SearchCtrl', function($scope, $log, $http) {
    var d3line, data1, data2, visulization;
    $scope.elements = loadAll($http, $scope);
    $scope.hideelementlist = true;
    $scope.querySearch = function(query) {
      var results;
      results = query ? $scope.elements.filter(createFilterFor(query)) : $scope.elements;
      return results;
    };
    $scope.selectedItemChange = function(item) {
      if (item !== void 0) {
        $log.info('Item changed to ' + item.display);
        return queryElementList($scope, $http, item);
      }
    };
    $scope.searchTextChange = function(text) {
      return $log.info('Text changed to ' + text);
    };
    $scope.drawChart = function(item) {
      return console.log(item.id);
    };
    visulization = document.querySelector('.d3linesvg');
    data1 = [
      {
        "sale": "202",
        "year": "2000"
      }, {
        "sale": "215",
        "year": "2001"
      }, {
        "sale": "179",
        "year": "2002"
      }, {
        "sale": "199",
        "year": "2003"
      }, {
        "sale": "134",
        "year": "2003"
      }, {
        "sale": "176",
        "year": "2010"
      }
    ];
    data2 = [
      {
        "sale": "152",
        "year": "2000"
      }, {
        "sale": "189",
        "year": "2002"
      }, {
        "sale": "179",
        "year": "2004"
      }, {
        "sale": "199",
        "year": "2006"
      }, {
        "sale": "134",
        "year": "2008"
      }, {
        "sale": "176",
        "year": "2010"
      }
    ];
    d3line = new D3Line(visulization, data1, data2);
    return d3line.draw();
  });

  queryElementList = function(_$scope, _$http, item) {
    return _$http.get('/elementlistitems/' + item.display + '/').success(function(data) {
      _$scope.elementlist = data;
      return _$scope.hideelementlist = false;
    }).error(function() {
      return console.log('cannot retrieve element list');
    });
  };

  this.loadAll = function(_$http, _$scope) {
    return _$http.get('/elementitems/all/').success(function(data) {
      return _$scope.elements = data.map(function(element) {
        return {
          value: element.title.toLowerCase(),
          display: element.title
        };
      });
    }).error(function() {
      return console.log('cannont retrieve element');
    });
  };

  this.createFilterFor = function(query) {
    var filterFn, lowercaseQuery;
    lowercaseQuery = angular.lowercase(query);
    return filterFn = function(state) {
      return booleanFn(state, lowercaseQuery);
    };
  };

  this.booleanFn = function(state, lowercaseQuery) {
    return state.value.indexOf(lowercaseQuery) === 0;
  };

}).call(this);

//# sourceMappingURL=indexapp.js.map
