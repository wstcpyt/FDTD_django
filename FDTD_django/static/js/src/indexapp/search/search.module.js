// Generated by CoffeeScript 1.9.1
(function() {
  var module, queryElementList;

  module = angular.module('indexapp.search', []);

  module.controller('SearchCtrl', [
    '$scope', '$log', '$http', function($scope, $log, $http) {
      $scope.elements = loadAll($http, $scope);
      $scope.hideelementlist = false;
      $scope.querySearch = function(query) {
        var results;
        results = query ? $scope.elements.filter(createFilterFor(query)) : $scope.elements;
        return results;
      };
      $scope.selectedItemChange = function(item) {
        if (item !== void 0) {
          $log.info('Item changed to ' + item.display);
          return queryElementList($scope, $http, item);
        }
      };
      return $scope.searchTextChange = function(text) {
        return $log.info('Text changed to ' + text);
      };
    }
  ]);

  queryElementList = function(_$scope, _$http, item) {
    return _$http.get('/elementlistitems/' + item.display + '/').success(function(data) {
      _$scope.elementlist = data;
      return _$scope.hideelementlist = false;
    }).error(function() {
      return console.log('cannot retrieve element list');
    });
  };

  this.loadAll = function(_$http, _$scope) {
    return _$http.get('/elementitems/all/').success(function(data) {
      return _$scope.elements = data.map(function(element) {
        return {
          value: element.title.toLowerCase(),
          display: element.title
        };
      });
    }).error(function() {
      return console.log('cannont retrieve element');
    });
  };

  this.createFilterFor = function(query) {
    var filterFn, lowercaseQuery;
    lowercaseQuery = angular.lowercase(query);
    return filterFn = function(state) {
      return booleanFn(state, lowercaseQuery);
    };
  };

  this.booleanFn = function(state, lowercaseQuery) {
    return state.value.indexOf(lowercaseQuery) === 0;
  };

  module.controller('LeftCtrl', function() {});

}).call(this);

//# sourceMappingURL=search.module.js.map
